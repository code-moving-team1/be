### 일반유저가 이사요청을 생성
POST http://localhost:4000/api/move-requests
Content-Type: application/json

{
  "serviceType": "SMALL",
  "moveDate": "2025-12-11",
  "departure": "인천시 계양구",
  "departureRegion": "인천",
  "destination": "서울 동대문구",
  "destinationRegion": "서울"
}


###
POST http://localhost:4000/api/auth/mover/signup
Content-Type: application/json

{
  "email": "testmover2@test.com",
  "password": "12345678",
  "phone": "01012345678",
  "nickname": "테스트무버2",
  "career": "1년",
  "introduction": "편안한 이사를 돕겠습니다",
  "description": "물건 훼손이나 분실 걱정 없게 확실하게 도와드립니다 단 한 번도 사고난 적 없습니다!!!",
  "moverRegions": ["대구", "대전", "서울", "부산"],
  "serviceTypes": ["SMALL", "OFFICE"]
}

###
POST http://localhost:4000/api/auth/customer/signup
Content-Type: application/json

{
  "email": "testcustomer1@test.com",
  "password": "12345678",
  "phone": "01012345678",
  "region": "서울",
  "serviceTypes": ["SMALL", "OFFICE"]
}

###
POST http://localhost:4000/api/auth/mover/signin
Content-Type: application/json

{
  "email": "test@test.com",
  "password": "12345678"
}

### Mover가 조건에 맞는 이사요청 list 불러오기
POST http://localhost:4000/api/move-requests/search
Content-Type: application/json

{
  "regions": ["경기","서울"],
  "serviceTypes": ["SMALL"]
}

###
POST http://localhost:4000/api/quote/move-requests/8
Content-Type: application/json

{
  "moverId": 3,
  "price": 3000000,
  "comment": "자기가 직접하는 이사",
  "type": "NORMAL"
}

###move-request id 에 대한 견적 작성
###/api/quote/move-requests/:moveRequestId
POST http://localhost:4000/api/quote/move-requests/12
Content-Type: application/json
Cookie: accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlclR5cGUiOiJNT1ZFUiIsImlhdCI6MTc1OTEyOTMxOCwiZXhwIjoxNzU5MTMwMjE4fQ.q8lxK9LqvfoyV2c1DGz3Wt-ciihe5fRHjDRaL4nkYSQ;

{
  "price": 3000000,
  "comment": "자기가 직접하는 이사",
  "type": "NORMAL"
}


### 1) NORMAL 견적 제출 (기사 권한 토큰 필요)
POST http://localhost:4000/quotes/move-requests/{MOVE_REQUEST_ID}
Content-Type: application/json
Authorization: Bearer {MOVER_JWT}

{
  "price": 120000,
  "comment": "일반 견적 제안합니다.",
  "type": "NORMAL"   // 생략 가능 (기본 NORMAL)
}

### 2) 경쟁 견적 하나 더 (다른 기사 or 같은 기사여도 type 조합 다르면 허용되지 않도록 @unique 확인)
POST http://localhost:4000/quotes/move-requests/{MOVE_REQUEST_ID}
Content-Type: application/json
Authorization: Bearer {MOVER2_JWT}

{
  "price": 110000,
  "comment": "경쟁 견적입니다.",
  "type": "NORMAL"
}

### 3) NORMAL 지정이 아닌, DIRECT 견적 제출 (직견 요청이 미리 있어야 통과)
POST http://localhost:4000/quotes/direct/move-requests/{MOVE_REQUEST_ID}
Content-Type: application/json
Authorization: Bearer {MOVER_JWT}

{
  "price": 130000,
  "comment": "지정 견적입니다."
}

### 4) 견적 목록 조회 (확정 전 상태 확인)
GET http://localhost:4000/quotes/move-requests/{MOVE_REQUEST_ID}

### 5) 견적 확정 (고객 권한 토큰 필요) — 위 1) 또는 3)의 응답에서 quoteId 골라서 사용
PATCH http://localhost:4000/quotes/{QUOTE_ID}/accept
Authorization: Bearer {CUSTOMER_JWT}

### 6) 확정 이후, 같은 요청의 견적들 상태 확인
GET http://localhost:4000/quotes/move-requests/{MOVE_REQUEST_ID}


### 리뷰작성
POST http://localhost:4000/api/reviews/bookings/{BOOKING_ID}
Content-Type: application/json
Authorization: Bearer {CUSTOMER_JWT}

{
  "content": "시간 딱 맞춰 오시고 친절했습니다!",
  "rating": 5
}


### 리뷰작성가능한 리스트 불러오기
### 고객 아이디로 로그인 + booking테이블에 고객아이디로 만들어진 booking중 COMPLETED 인거 불러오기
GET http://localhost:4000/api/bookings/reviewables


### booking의 serviceDate계산하여 status 갱신
POST http://localhost:4000/api/internal/cron/complete-bookings?graceHours=6
Content-Type: application/json
X-Cron-Token: SuperPowerfulRandomSecret

{ "source": "postman" }

### 내가 작성한 리뷰 리스트(고객아이디로 로그인)
POST http://localhost:4000/api/reviews/my?page=1&pageSize=10&sort=recent